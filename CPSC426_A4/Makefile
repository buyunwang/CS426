# GNU Make solution makefile autogenerated by Premake
# Type "make help" for usage help

ifndef config
  config=debug32
endif
export config

PROJECTS := CPSC426 cpsc426Util cpsc426Scenario cpsc426Render jsoncpp nanoGUI nanovg glfw

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

CPSC426: glfw cpsc426Util nanoGUI jsoncpp cpsc426Render nanovg cpsc426Scenario
	@echo "==== Building CPSC426 ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f CPSC426.make

cpsc426Util: 
	@echo "==== Building cpsc426Util ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f cpsc426Util.make

cpsc426Scenario: glfw jsoncpp nanoGUI cpsc426Util cpsc426Render
	@echo "==== Building cpsc426Scenario ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f cpsc426Scenario.make

cpsc426Render: glfw cpsc426Util nanoGUI
	@echo "==== Building cpsc426Render ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f cpsc426Render.make

jsoncpp: 
	@echo "==== Building jsoncpp ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f jsoncpp.make

nanoGUI: glfw nanovg
	@echo "==== Building nanoGUI ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f nanoGUI.make

nanovg: glfw
	@echo "==== Building nanovg ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f nanovg.make

glfw: 
	@echo "==== Building glfw ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f glfw.make

clean:
	@${MAKE} --no-print-directory -C . -f CPSC426.make clean
	@${MAKE} --no-print-directory -C . -f cpsc426Util.make clean
	@${MAKE} --no-print-directory -C . -f cpsc426Scenario.make clean
	@${MAKE} --no-print-directory -C . -f cpsc426Render.make clean
	@${MAKE} --no-print-directory -C . -f jsoncpp.make clean
	@${MAKE} --no-print-directory -C . -f nanoGUI.make clean
	@${MAKE} --no-print-directory -C . -f nanovg.make clean
	@${MAKE} --no-print-directory -C . -f glfw.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "   debug32"
	@echo "   release32"
	@echo "   debug64"
	@echo "   release64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   CPSC426"
	@echo "   cpsc426Util"
	@echo "   cpsc426Scenario"
	@echo "   cpsc426Render"
	@echo "   jsoncpp"
	@echo "   nanoGUI"
	@echo "   nanovg"
	@echo "   glfw"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
